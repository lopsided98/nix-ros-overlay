name: Update overlay using Superflore
on:
  schedule:
    - cron: "0 12 * * FRI"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
      - uses: cachix/install-nix-action@v22
      - uses: cachix/cachix-action@v12
        with:
          name: ros
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: Install Superflore
        run: |
          nix build .#update-overlay
      - name: Restore ROS tarball cache
        uses: actions/cache/restore@v4
        with:
          # Use run_id to update the cache:
          # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          key: tars-${{ github.run_id }}
          restore-keys: tars
          path: |
            ~/.ros/tar
      - name: Update overlay
        env:
          GITHUB_RUNNER_TEMP: ${{ runner.temp }}
        run: |
          git config --local user.email "superflore@github.com"
          git config --local user.name "Superflore"
          git config credential.helper '!
            f() {
              echo "username=lopsided98"
              echo "password=${SUPERFLORE_GITHUB_TOKEN}"
            }; f'
          nix run .#update-overlay
      - name: Remove untouched files from the cache
        run: "find ~/.ros/tar -atime +1 | tee >(xargs -r ls -lh >&2) | xargs -r rm"
      - name: Save ROS tarball cache
        uses: actions/cache/save@v4
        with:
          key: tars-${{ github.run_id }}
          path: |
            ~/.ros/tar
      - name: Update ament_vendor info
        continue-on-error: true
        run: |
          # permittedInsecurePackages is needed for updating some gz-*-vendor packages.
          # Note that this runs without access to SUPERFLORE_GITHUB_TOKEN.
          mkdir -p ~/.config/nixpkgs
          echo '{ permittedInsecurePackages = [ "freeimage-3.18.0-unstable-2024-04-18" ]; }' > ~/.config/nixpkgs/config.nix
          NIX_PATH=nixpkgs=$PWD ./maintainers/scripts/update-ament-vendor.sh || ret=$?
          git commit -m 'Update vendored-source.json files' $(find -name vendored-source.json) || :
          exit $ret
      - name: Create PR
        env:
          # Don't use secrets.GITHUB_TOKEN because it prevents the PR from
          # triggering a build
          # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#about-workflow-events
          SUPERFLORE_GITHUB_TOKEN: ${{ secrets.SUPERFLORE_GITHUB_TOKEN }}
        run: |
          if [ $(stat --format='%s' .pr-message.tmp) -gt 65536 ]; then
            echo "PR body too long - truncating!"
            truncate -s 64K .pr-message.tmp
          fi
          nix run .#update-overlay -- --pr-only \
            --output-repository-path . \
            --upstream-branch develop \
